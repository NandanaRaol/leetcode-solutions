class Solution
 {
public:
    bool check(vector<string>&v1,vector<string>&v2,int mid)
    {
        unordered_map<string,bool>mp;
        for(int i=0;i<v1.size();i++)
        {
            if(v1[i].size()>=mid)
            {
                string ck=v1[i].substr(0,mid);
                mp[ck]=true;
            }
        }
        for(int i=0;i<v2.size();i++)
        {
            if(v2[i].size()>=mid)
            {
                string ck=v2[i].substr(0,mid);
                if(mp[ck]==true)
                  return true;
            }
        }
        return false;
    }
    int longestCommonPrefix(vector<int>& a1, vector<int>& a2) 
    {
       int a1_sz=a1.size();
       int a2_sz=a2.size();
       vector<string>v1,v2;
       int maxi=0;
       for(int i=0;i<a1_sz;i++)
       {
          string ck=to_string(a1[i]);
          int cks=ck.size();
          maxi=max(maxi,cks);
          v1.push_back(ck);
       }    
      for(int i=0;i<a2_sz;i++)
       {
          string ck=to_string(a2[i]);
          int cks=ck.size();
          maxi=max(maxi,cks);
          v2.push_back(ck);
       }   
       int ans=0;
       int l=0;
       int r=maxi;
       while(l<=r)
       {
          int mid=(l+r)/2;
          if(check(v1,v2,mid))
          {
              l=mid+1;
              ans=max(ans,mid);
          }
          else
           r=mid-1;
       }
       return ans;
    }
};
