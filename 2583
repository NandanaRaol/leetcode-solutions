class Solution
 {
public:
vector<long long>ans;
    long long kthLargestLevelSum(TreeNode* root, int k) 
    {
       queue<TreeNode*>q;
       q.push(root);
    //   ans.push_back(root);
       while(!q.empty())
       {
        int x=q.size();
        long long sum=0;
        for(int i=0;i<x;i++)
        {
           TreeNode* curr=q.front();
            sum+=curr->val;
           q.pop();
           if(curr->left!=NULL)
           {
              q.push(curr->left);
           }
           if(curr->right!=NULL)
           {
             q.push(curr->right);
           }
        }
        cout<<sum<<" ";
        ans.push_back(sum);
       }
       sort(ans.begin(),ans.end());
       reverse(ans.begin(),ans.end());
       if(k-1<=ans.size()-1)
       return ans[k-1];
       else
        return -1;
    }
};
